stages:
  - build
  - deploy

image: efraimz/laravel-docker:8.0


.init_ssh: &init_ssh |
  mkdir -p ~/.ssh
  chmod 700 ~/.ssh
  eval $(ssh-agent -s)
  echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

# Replace the last line with the following lines if you'd rather
# leave StrictHostKeyChecking enabled (replace yourdomain.com):
#  ssh-keyscan yourdomain.com >> ~/.ssh/known_hosts
#  chmod 644 ~/.ssh/known_hosts

.change_file_permissions: &change_file_permissions |
  find . -type f -not -path "./vendor/*" -exec chmod 664 {} \;
  find . -type d -not -path "./vendor/*" -exec chmod 775 {} \;

composer:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}-composer
    paths:
      - vendor/
  script:
    - composer install --ignore-platform-reqs --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
    - cp .env.example .env
    - composer dump-autoload
    - php artisan config:clear
    - php artisan cache:clear
    - php artisan key:generate
    - php artisan route:clear
  artifacts:
    expire_in: 1 month
    paths:
      - vendor/
      - .env

npm:
  stage: build
  cache:
    key: ${CI_COMMIT_REF_SLUG}-npm
    paths:
      - node_modules/
  script:
    - npm install
    - npm run production
  artifacts:
    expire_in: 1 month
    paths:
      - node_modules/
      - public/css/
      - public/js/

production:
  stage: deploy
  script:
    - *init_ssh
    - *change_file_permissions
    - echo "$ENV_CHAT" > .env.dist
    - if [[ -f .env.dist ]]; then echo "Created .env.dist"; fi
    - php ./vendor/bin/dep deploy -f ./production.deploy.php -vvv -o release_name=$CI_JOB_ID
  environment:
    name: main
    url: https://chat.tassfx.com
  only:
    - main
